-- Inserir novos registros na tabela existente TB_FATO_ANIMELIST
INSERT INTO `personal-anime-data-2024.REF_DATA.TB_FATO_ANIMELIST` (
  NME_TITLE_ROMAJI,
  NME_TITLE_ENGLISH,
  DSC_COVER_IMAGE,
  DSC_GENRES,
  DATE_START_YEAR,
  NME_STUDIO,
  NME_SEASON,
  DATE_SEASON_YEAR,
  NME_SOURCE,
  DSC_DESCRIPTION,
  KPI_NUM_EPISODES,
  KPI_AVERAGE_SCORE,
  KPI_POPULARITY,
  KPI_DURATION_MIN,
  KPI_SCORE,
  KPI_FAVOURITES_LIKES,
  KPI_RECOMMEND_SCORE
)
WITH NormalizedScores AS (
  SELECT
    -- Colunas de NOME e DSC
    INITCAP(IFNULL(TITLE__ROMAJI_, 'NA')) AS NME_TITLE_ROMAJI,
    INITCAP(IFNULL(TITLE__ENGLISH_, 'NA')) AS NME_TITLE_ENGLISH,
    (IFNULL(COVER_IMAGE, 'NA')) AS DSC_COVER_IMAGE,
    INITCAP(IFNULL(GENRES, 'NA')) AS DSC_GENRES,
    INITCAP(IFNULL(STUDIO, 'NA')) AS NME_STUDIO,
    INITCAP(IFNULL(SEASON, 'NA')) AS NME_SEASON,
    INITCAP(IFNULL(SOURCE, 'NA')) AS NME_SOURCE,
    -- Tratando a coluna Description
    REPLACE(
      REGEXP_REPLACE(
        REGEXP_REPLACE(
          IFNULL(DESCRIPTION, 'NA'), 
          r'</?(l|i)>', ' '
        ), 
        r'<(/?br)>', 
        '\n'
      ), 
      '  ', ' '
    ) AS DSC_DESCRIPTION,
    -- Colunas de DATA: caso nulo, atribui 1999 para as Datas
    IFNULL(CAST(START_YEAR AS INT64), 1999) AS DATE_START_YEAR,
    IFNULL(CAST(SEASON_YEAR AS INT64), 1999) AS DATE_SEASON_YEAR,
    -- Colunas KPI: caso nulo, atribui zero
    IFNULL(EPISODES, 0) AS KPI_NUM_EPISODES,
    IFNULL(AVERAGE_SCORE, 0) AS KPI_AVERAGE_SCORE,
    IFNULL(POPULARITY, 0) AS KPI_POPULARITY,
    IFNULL(DURATION__MIN_, 0) AS KPI_DURATION_MIN,
    IFNULL(SCORE, 0) AS KPI_SCORE,
    IFNULL(FAVOURITES, 0) AS KPI_FAVOURITES_LIKES,
    -- Normalizando os campos
    IFNULL(SCORE, 0) / 100 AS NORMALIZED_SCORE,
    IFNULL(AVERAGE_SCORE, 0) / 100 AS NORMALIZED_AVERAGESCORE,
    IFNULL(POPULARITY, 0) / (SELECT MAX(POPULARITY) FROM `personal-anime-data-2024.TRU_DATA.TRU_ANIMELIST`) AS NORMALIZED_POPULARITY,
    IFNULL(FAVOURITES, 0) / (SELECT MAX(FAVOURITES) FROM `personal-anime-data-2024.TRU_DATA.TRU_ANIMELIST`) AS NORMALIZED_FAVOURITES
  FROM `personal-anime-data-2024.TRU_DATA.TRU_ANIMELIST`
  -- Insere somente linhas novas se há novo Anime assistido
  WHERE INITCAP(IFNULL(TITLE__ENGLISH_, 'NA')) NOT IN (
    SELECT INITCAP(IFNULL(NME_TITLE_ENGLISH, 'NA'))
    FROM `personal-anime-data-2024.REF_DATA.TB_FATO_ANIMELIST`
  )
)
SELECT
  NME_TITLE_ROMAJI,
  NME_TITLE_ENGLISH,
  DSC_COVER_IMAGE,
  DSC_GENRES,
  DATE_START_YEAR,
  NME_STUDIO,
  NME_SEASON,
  DATE_SEASON_YEAR,
  NME_SOURCE,
  DSC_DESCRIPTION,
  KPI_NUM_EPISODES,
  KPI_AVERAGE_SCORE,
  KPI_POPULARITY,
  KPI_DURATION_MIN,
  KPI_SCORE,
  KPI_FAVOURITES_LIKES,
  -- Calculo de score de recomendação baseado em pesos.
  ROUND((0.50 * NORMALIZED_SCORE + 0.25 * NORMALIZED_AVERAGESCORE + 0.15 * NORMALIZED_POPULARITY + 0.10 * NORMALIZED_FAVOURITES) * 100, 2) AS KPI_RECOMMEND_SCORE
FROM NormalizedScores;
